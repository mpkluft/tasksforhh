/*
Задача 2
В некоторых числах можно найти последовательности цифр, 
которые в сумме дают 10. К примеру, в числе 3523014 целых четыре 
аких последовательности:
3523014
3523014
3523014
3523014

Можно найти и такие замечательные числа, каждая цифра которых
 входит в по крайней мере одну такую последовательность.
Например, 3523014 является замечательным числом, а 28546 — 
нет (в нём нет последовательности цифр, дающей в сумме 10 
и при этом включающей 5).

Найдите количество этих замечательных чисел в интервале [1, 3400000] 
(обе границы — включительно). 

*/
function wonderfullNumber(firstNum, lastNum){

	var a = Date.now(), //Для замера времени выполнения скрипта
			wonderfulNumber = 0, //Кол-во замечательных чисел
			b = 0,  //Для замера времени выполнения скрипта
    	res = 0;  //Для замера времени выполнения скрипта

	// цикл, подбирающий основное число из диапазона [firstNum lastNum]
	for(j = firstNum; j <= lastNum; j++) {

		var sum = 0, // обнуление суммы
		num = String(firstNum), // искомое число
		iter = 0, // обнуление суммы
		cntPosled = 0; // счетчик последовательностей

		for(var i = 0; i <= num.length; i++) {
			sum += Number(num[i]);
			// если сумма последовательно расположенных цифр = 10
			if(sum === 10) 
			{
				cntPosled++;
				// если перебор числа закончился
				if(i == num.length - 1)
				{
					// если в искомом числе есть цифра 5,
					// то wonderfulNumber++ 
					if(num.indexOf("5") != -1)
					{
						wonderfulNumber++;
						break;
					}
					break;
				}
				// проверка на наличие еще одной последовательности
				if(num[i+1] != undefined) 
				{
					sum += Number(num[i+1]);
					if (sum === 10)
					{
						cntPosled++;
					} else {
						sum -= Number(num[i+1]);
					}
				}
				sum = 0;
				i = iter;
				iter++;
			} 
			if (sum > 10 || i == num.length -1 )
			{
				break;
			}
		}
		
		firstNum++;
	}
	console.log("wonderfulNumber - " + wonderfulNumber);

	b = Date.now();
	res = b - a;

	console.log("скрипт выполнялся " + res + " ms");
}

//wonderfullNumber(1, 3400000);