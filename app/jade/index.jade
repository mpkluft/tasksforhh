doctype html
html(lang="ru")
head
    meta(charset='utf-8')   
    meta(name='description', content='')  
    meta(name='viewport', content='width=device-width, initial-scale=1')
    title="Комар Алекс" 
    link(rel='apple-touch-icon', href='apple-touch-icon.png')
    // Place favicon.ico in the root directory
  
    // build:css styles/main.css
    link(rel='stylesheet', href='styles/main.css')
    // endbuild
      // build:css styles/vendor.css
    // bower:css
    link(rel='stylesheet', href='/bower_components/font-awesome/css/font-awesome.css')
    // endbower
    // endbuild
    // build:js scripts/vendor/modernizr.js
    script(src='/bower_components/modernizr/modernizr.js')
    // endbuild
    // yandex shara begin
    script(type='text/javascript', src='//yastatic.net/es5-shims/0.0.2/es5-shims.min.js', charset='utf-8')
    script(type='text/javascript', src='//yastatic.net/share2/share.js', charset='utf-8')
    // yandex shara end
  body
    include ./mixins/mixins.jade
    .varning
      p.warning__p перестань нажимать
    .tasks
      .container
        .task.task0.row
          h2.task__name Задание 1
          .task__text.col-md-6 
            p.task__p Число 125874 и результат умножения его на 2 — 251748 можно получить друг из друга перестановкой цифр. 
            p.task__p Найдите наименьшее положительное натуральное x такое, что числа 3*x, 4*x можно получить друг из друга перестановкой цифр.
          .task__program-launch.col-md-2
            .button(id= "task0") Выполнить скрипт
          .task__result-wrap.col-md-4
            .task__time Время выполнения скрипта
              span.task0__time-span.task__span
            .task__result Результат вычисления
              span.task0__result-span.task__span
        .task.task1.row
          h2.task__name Задание 2
          .task__text.col-md-6 
            p.task__p В некоторых числах можно найти последовательности цифр, которые в сумме дают 10. 
            p.task__p К примеру, в числе 3523014 целых четыре таких последовательности:3523014 3523014 3523014 3523014 
            p.task__p Можно найти и такие замечательные числа, каждая цифра которых входит в по крайней мере одну такую последовательность. Например, 3523014 является замечательным числом, а 28546 — нет (в нём нет последовательности цифр, дающей в сумме 10 и при этом включающей 5).
            p.task__p Найдите количество этих замечательных чисел в интервале [1, 3400000] (обе границы — включительно). 
          .task__program-launch.col-md-2
            .button(id= "task1") Выполнить скрипт
          .task__result-wrap.col-md-4
            .task__time Время выполнения скрипта
              span.task1__time-span.task__span
            .task__result Результат вычисления
              span.task1__result-span.task__span
        .task.task2.row
          h2.task__name Задание 3
          .task__text.col-md-6 
            p.task__p Определим функцию P(n,k) следующим образом: P(n,k) = 1, если n может быть представлено в виде суммы k простых чисел (простые числа в записи могут повторяться, 1 не является простым числом) и P(n,k) = 0 в обратном случае.
            p.task__p К примеру, P(10,2) = 1, т.к. 10 может быть представлено в виде суммы 3 + 7 или 5 + 5, а P(11,2) = 0, так как никакие  два простых числа не могут дать в сумме 11.
            p.task__p Определим функцию S(n) как сумму значений функции P(i,k) для всех i и k, таких что 1≤i≤n, 1≤k≤n. 
            p.task__p Таким образом, S(2) = P(1,1) + P(2,1) + P(1,2) + P(2,2) = 1, S(10) = 20,  S(1000) = 248838.Найдите S(1155).  
          .task__program-launch.col-md-2
            .button(id= "task2") Выполнить скрипт
          .task__result-wrap.col-md-4
            .task__time Время выполнения скрипта
              span.task2__time-span.task__span
            .task__result Результат вычисления
              span.task2__result-span.task__span
        .task.task3.row
          h2.task__name Задание 4
          .task__text.col-md-6 
            p.task__p Рассмотрим все возможные числа ab для 1'<'a'<'6 и 1'<'b'<'6:
            p.task__p 22=4,23=8, 24=16, 25=32 32=9, 33=27, 34=81,35=243 42=16, 43=64, 44=256, 45=1024, 52=25, 53=125, 54=625, 55=3125
            p.task__p Если убрать повторения, то получим 15 различных чисел. 
            p.task__p Сколько различных чисел ab для 2'<'a'<'100 и 2'<'b'<'126?
          .task__program-launch.col-md-2
            .button(id= "task3") Выполнить скрипт
          .task__result-wrap.col-md-4
            .task__time Время выполнения скрипта
              span.task3__time-span.task__span
            .task__result Результат вычисления
              span.task3__result-span.task__span
        .task.task4.row
          h2.task__name Задание 5
          .task__text.col-md-6 
            p.task__p Если мы возьмем 47,перевернем его и сложим, получится 47 + 74 = 121 — число-палиндром.
            p.task__p Если взять 349 и проделать над ним эту операцию три раза, то тоже получится палиндром:349 + 943 = 1292 1292 + 2921  4213 4213 + 3124 = 7337 
            p.task__p Найдите количество положительных натуральных чисел меньших 13332 таких, что из них нельзя  получить палиндром за 50 или менее применений  описанной операции (операция должна быть применена  хотя бы один раз). 
          .task__program-launch.col-md-2
            .button(id= "task4") Выполнить скрипт
          .task__result-wrap.col-md-4
            .task__time Время выполнения скрипта
              span.task4__time-span.task__span
            .task__result Результат вычисления
              span.task4__result-span.task__span
        .task.task5.row
          h2.task__name Задание 6
          .task__text.col-md-6 
              p.task__p Наименьшее число m, такое, что m! делится без остатка  на 10 — это m=5 (5! = 120). 
              p.task__p Аналогично, наименьшее число  m, такое, что m! делится без остатка на 25 — это m=10.  
              p.task__p В общем случае, значение функции s(n) равно наименьшему  числу m, такому что m! без остатка делится на n.  
              p.task__p Определим функцию S(M, N) = ∑s(n) для всех n ∈ [M, N].   К примеру, S(6, 10) = 3 + 7 + 4 + 6 + 5 = 25.   Найдите S(860000, 870000). 
            .task__program-launch.col-md-2
              .button(id= "task5") Выполнить скрипт
            .task__result-wrap.col-md-4
              .task__time Время выполнения скрипта
                span.task5__time-span.task__span
              .task__result Результат вычисления
                span.task5__result-span.task__span
        .task.task6.row
          h2.task__name Задание 7
          .task__text.col-md-6 
              p.task__p Рассмотрим спираль, в которой, начиная с 1 в центре, последовательно расставим числа по часовой стрелке,пока не получится спираль 5 на 5   
              p.task__p 21 22 23 24 25 
              p.task__p 20  7  8  9 10  
              p.task__p 19  6  1  2 11 
              p.task__p 18  5  4  3 12 
              p.task__p 17 16 15 14 13 
              p.task__p Можно проверить, что сумма всех чисел на диагоналях равна 101.Чему будет равна сумма чисел на диагоналях, для спирали размером 1091 на 1091?  
            .task__program-launch.col-md-2
              .button(id= "task6") Выполнить скрипт
            .task__result-wrap.col-md-4
              .task__time Время выполнения скрипта
                span.task6__time-span.task__span
              .task__result Результат вычисления
                span.task6__result-span.task__span



    //
      [if lt IE 10]>
      <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>
      <![endif]  
    

    // Google Analytics: change UA-XXXXX-X to be your site's ID.
    script.
      (function(b,o,i,l,e,r){b.GoogleAnalyticsObject=l;b[l]||(b[l]=
      function(){(b[l].q=b[l].q||[]).push(arguments)});b[l].l=+new Date;
      e=o.createElement(i);r=o.getElementsByTagName(i)[0];
      e.src='https://www.google-analytics.com/analytics.js';
      r.parentNode.insertBefore(e,r)}(window,document,'script','ga'));
      ga('create','UA-XXXXX-X');ga('send','pageview');

    // build:js scripts/vendor.js
    // bower:js
    script(src='/bower_components/jquery/dist/jquery.js')
    // endbower
    // endbuild
    // build:js scripts/plugins.js
    // endbuild
    // build:js scripts/main.js
    script(src='scripts/main.js')
    // endbuild